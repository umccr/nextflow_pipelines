/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  Available keys to override module options:
    ext.args   = Additional arguments appended to command in module.
    ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
    ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
    ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/
process {
  withName: 'AMBER' {
    ext.jarPath = '/opt/conda/share/hmftools-amber-3.9-0/amber.jar'
    publishDir = [
      path: { "${params.outdir}" },
      mode: params.publish_dir_mode,
      saveAs: { filename -> filename.equals('versions.yml') ? null : "${meta.id}/${filename}" },
    ]
  }

  withName: 'COBALT' {
    ext.jarPath = '/opt/conda/share/hmftools-cobalt-1.13-0/cobalt.jar'
    publishDir = [
      path: { "${params.outdir}" },
      mode: params.publish_dir_mode,
      saveAs: { filename -> filename.equals('versions.yml') ? null : "${meta.id}/${filename}" },
    ]
  }

  withName: 'CUSTOM_DUMPSOFTWAREVERSIONS' {
    publishDir = [
      path: { "${params.outdir}/pipeline_info" },
      mode: params.publish_dir_mode,
      pattern: '*_versions.yml',
    ]
  }

  withName: '.*:GRIDSS:.*' {
    ext.jarPath = '/opt/conda/pkgs/gridss-2.13.2-h20b1175_1/share/gridss-2.13.2-1/gridss.jar'
  }

  withName: '.*:GRIDSS:.*' {
    publishDir = [
      path: { "${params.outdir}" },
      mode: params.publish_dir_mode,
      pattern: 'log_*.txt',
      saveAs: { filename -> "${meta.id}/gridss/${filename}" }
    ]
  }

  withName: '.*:GRIDSS:CALL' {
    publishDir = [
      path: { "${params.outdir}" },
      mode: params.publish_dir_mode,
      // NOTE(SW): java.io.File and Nextflow's file do not work here, resorting to string splitting
      saveAs: { filename ->
        if(filename.equals('versions.yml')) {
          return null
        } else {
          def tokens = filename.split('[/]')
          return "${meta.id}/gridss/${tokens[-1]}"
        }
      }
    ]
  }

  withName: 'GRIPSS.*' {
    ext.jarPath = '/usr/local/share/hmftools-gripss-2.2-0/gripss.jar'
  }

  withName: '.*GRIPSS_GERMLINE' {
    publishDir = [
      path: { "${params.outdir}" },
      mode: params.publish_dir_mode,
      saveAs: { filename -> filename.equals('versions.yml') ? null : "${meta.id}/gripss_germline/${filename}" },
    ]
  }

  withName: '.*GRIPSS_SOMATIC' {
    publishDir = [
      path: { "${params.outdir}" },
      mode: params.publish_dir_mode,
      saveAs: { filename -> filename.equals('versions.yml') ? null : "${meta.id}/gripss_somatic/${filename}" },
    ]
  }

  withName: 'LILAC_PROCESS' {
    ext.jarPath = '/opt/lilac/lilac.jar'
    publishDir = [
      path: { "${params.outdir}" },
      mode: params.publish_dir_mode,
      saveAs: { filename -> filename.equals('versions.yml') ? null : "${meta.id}/${filename}" }
    ]
  }

  withName: '.*LINX:.*' {
    ext.jarPath = '/usr/local/share/hmftools-linx-1.21-0/linx.jar'
  }

  withName: '.*LINX_GERMLINE' {
    publishDir = [
      path: { "${params.outdir}" },
      mode: params.publish_dir_mode,
      saveAs: { filename -> filename.equals('versions.yml') ? null : "${meta.id}/linx/germline_annotations/" },
    ]
  }

  withName: '.*LINX_SOMATIC' {
    publishDir = [
      path: { "${params.outdir}" },
      mode: params.publish_dir_mode,
      saveAs: { filename -> filename.equals('versions.yml') ? null : "${meta.id}/linx/somatic_annotations/" },
    ]
  }

  withName: '.*LINX:VISUALISER' {
    ext.path_circos = 'circos'
    publishDir = [
      path: { "${params.outdir}" },
      mode: params.publish_dir_mode,
      saveAs: { filename -> filename.equals('versions.yml') ? null : "${meta.id}/linx/somatic_plots/" },
    ]
  }

  withName: 'LINX_REPORT' {
    publishDir = [
      path: { "${params.outdir}" },
      mode: params.publish_dir_mode,
      saveAs: { filename -> filename.equals('versions.yml') ? null : "${meta.id}/linx/report/${filename}" },
    ]
  }

  withName: 'PAVE.*' {
    ext.jarPath = '/opt/pave/pave.jar'
    publishDir = [
      path: { "${params.outdir}" },
      mode: params.publish_dir_mode,
      saveAs: { filename -> filename.equals('versions.yml') ? null : "${meta.id}/pave/${filename}" },
    ]
  }

  withName: 'COLLECTWGSMETRICS' {
    tag = { task.index }
    label = null
    publishDir = [
      path: { "${params.outdir}" },
      mode: params.publish_dir_mode,
      saveAs: { filename -> filename.equals('versions.yml') ? null : "${meta.id_simple}/wgs_metrics/${filename}" },
    ]
  }

  withName: 'PURPLE' {
    ext.jarPath = '/opt/conda/share/hmftools-purple-3.6-0/purple.jar'
    ext.circosPath = 'circos'
    publishDir = [
      path: { "${params.outdir}" },
      mode: params.publish_dir_mode,
      saveAs: { filename -> filename.equals('versions.yml') ? null : "${meta.id}/${filename}" },
    ]
  }

  withName: 'SAGE.*' {
    ext.jarPath = '/usr/local/share/hmftools-sage-3.1-0/sage.jar'
    publishDir = [
      path: { "${params.outdir}" },
      mode: params.publish_dir_mode,
      saveAs: { filename -> filename.equals('versions.yml') ? null : "${meta.id}/sage/${filename}" },
    ]
  }

  withName: 'TEAL' {
    ext.jarPath = '/opt/teal/teal.jar'
    publishDir = [
      path: { "${params.outdir}" },
      mode: params.publish_dir_mode,
      saveAs: { filename -> filename.equals('versions.yml') ? null : "${meta.id}/${filename}" },
    ]
  }
}
